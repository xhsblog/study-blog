{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js","webpack:///./src/components/bio.js"],"names":["BlogPostTemplate","render","post","this","props","data","markdownRemark","siteTitle","site","siteMetadata","title","_this$props$pageConte","pageContext","previous","next","disqusConfig","shortname","config","identifier","location","pathname","frontmatter","console","log","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_5__","_components_seo__WEBPACK_IMPORTED_MODULE_6__","description","excerpt","style","Object","assign","scale","display","marginBottom","rhythm","marginTop","date","dangerouslySetInnerHTML","__html","html","disqus_react__WEBPACK_IMPORTED_MODULE_8__","_components_bio__WEBPACK_IMPORTED_MODULE_4__","flexWrap","justifyContent","listStyle","padding","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","fields","slug","rel","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","children","propTypes","PropTypes","object","string","isRequired","func","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","color","hr","background","a.gatsby-resp-image-link","boxShadow","a.anchor","a.anchor svg[aria-hidden=\"true\"]","stroke","p code","fontSize","h1 code, h2 code, h3 code, h4 code, h5 code, h6 code","li code","blockquote","borderLeftColor","opacity","blockquote.translation","googleFonts","typography","Typography","m","module","exports","require","default","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","InternalPageRenderer","json","shape","Layout","header","_this$props","textDecoration","fontFamily","marginLeft","marginRight","maxWidth","href","target","SEO","lang","meta","keywords","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","array","arrayOf","bioQuery","Bio","_data$site$siteMetada","social","gatsby_image__WEBPACK_IMPORTED_MODULE_4___default","fixed","avatar","childImageSharp","alt","minWidth","borderRadius","imgStyle","_public_static_d_4007731267_json__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"component---src-templates-blog-post-js-dc3c287938484d9284f2.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm, scale } from \"../utils/typography\"\n\nimport { DiscussionEmbed } from \"disqus-react\"\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const { previous, next } = this.props.pageContext\n    const disqusConfig = {\n      shortname: \"blog-xiaohesong\",\n      config: {\n        identifier: `xiaohesong-${this.props.location.pathname}`,\n        title: `xiaohesong-${post.frontmatter.title}`\n      },\n    }\n    console.log(this.props.location);\n    \n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}\n        />\n        <h1>{post.frontmatter.title}</h1>\n        <p\n          style={{\n            ...scale(-1 / 5),\n            display: `block`,\n            marginBottom: rhythm(1),\n            marginTop: rhythm(-1),\n          }}\n        >\n          {post.frontmatter.date}\n        </p>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        />\n        <DiscussionEmbed {...disqusConfig} />\n        <Bio />\n\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import Typography from \"typography\"\nimport Wordpress2016 from \"typography-theme-wordpress-2016\"\n\nimport './global.css';\n\nWordpress2016.overrideThemeStyles = () => {\n  return {\n    \"a\": {\n      // color: 'var(--textLink)',\n      color: '#d23669'\n    },\n    \"hr\": {\n      // background: 'var(--hr)',\n      background: 'hsla(0, 0%, 0%, 0.2);'\n    },\n    'a.gatsby-resp-image-link': {\n      boxShadow: 'none',\n    },\n    // These two are for gatsby-remark-autolink-headers:\n    'a.anchor': {\n      boxShadow: 'none',\n    },\n    'a.anchor svg[aria-hidden=\"true\"]': {\n      // stroke: 'var(--textLink)',\n      stroke: '#d23669'\n    },\n    'p code': {\n      fontSize: '1rem',\n    },\n    // TODO: why tho\n    'h1 code, h2 code, h3 code, h4 code, h5 code, h6 code': {\n      fontSize: 'inherit',\n    },\n    'li code': {\n      fontSize: '1rem',\n    },\n    blockquote: {\n      color: 'inherit',\n      borderLeftColor: 'inherit',\n      opacity: '0.8',\n    },\n    'blockquote.translation': {\n      fontSize: '1em',\n    },\n  }\n}\n\ndelete Wordpress2016.googleFonts\n\nconst typography = new Typography(Wordpress2016)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport { rhythm, scale } from \"../utils/typography\"\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let header\n\n    if (location.pathname === rootPath) {\n      header = (\n        <h1\n          style={{\n            ...scale(1.5),\n            marginBottom: rhythm(1.5),\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              // color: 'var(--textTitle)',\n              color: '#222'\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h1>\n      )\n    } else {\n      header = (\n        <h3\n          style={{\n            fontFamily: `Montserrat, sans-serif`,\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `rgb(255, 167, 196)`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h3>\n      )\n    }\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(24),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <header>{header}</header>\n        <main>{children}</main>\n        <footer>\n          <a href=\"https://mobile.twitter.com/xiaohesong\" target=\"_blank\" rel=\"noopener noreferrer\">twitter</a>\n           {' '}\n        &bull;{' '}\n          <a href=\"https://github.com/xiaohesong\" target=\"_blank\" rel=\"noopener noreferrer\">github</a>\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","/**\n * Bio component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Image from \"gatsby-image\"\n\nimport { rhythm } from \"../utils/typography\"\n\nfunction Bio() {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { author, social } = data.site.siteMetadata\n        return (\n          <div\n            style={{\n              display: `flex`,\n              marginBottom: rhythm(2.5),\n            }}\n          >\n            <Image\n              fixed={data.avatar.childImageSharp.fixed}\n              alt={author}\n              style={{\n                marginRight: rhythm(1 / 2),\n                marginBottom: 0,\n                minWidth: 50,\n                borderRadius: `100%`,\n              }}\n              imgStyle={{\n                borderRadius: `50%`,\n              }}\n            />\n            <p>\n              {/* <strong>{author}</strong> 的学习记录，热于分享。 */}\n              {` `}本博客是\n              <a href={`https://github.com/xiaohesong/til`}>{' '}\n                此学习库\n              </a>{` `}的部分内容。{` `}\n              你也可以点击查看<a href={`http://xiaohesong.github.io`}>{' '}\n                未迁移的老博客\n              </a>。{` `}\n            </p>\n          </div>\n        )\n      }}\n    />\n  )\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`\n\nexport default Bio\n"],"sourceRoot":""}
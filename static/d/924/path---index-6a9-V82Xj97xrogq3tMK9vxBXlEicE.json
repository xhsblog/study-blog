{"data":{"site":{"siteMetadata":{"title":"xiaohesong's Blog"}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"你使用 hooks 写了一些组件。也许只是一个小的应用。你基本上是满意的。你对这个API游刃有余，并在此过程中学会了一些技巧。你甚至做了一些 自定义Hook 来提取重复逻辑（30…","fields":{"slug":"/complete-effects/"},"frontmatter":{"date":"March 27, 2019","title":"一份完整的effects指南","description":"详细的介绍了effects使用中的一些细节"}}},{"node":{"excerpt":"编写弹性组件 当人们开始学习React时，他们经常会想要一份风格指南。虽然在项目中应用一些一致的规则是个好主意，但很多都是随意的 - 所以React对它们没有强烈的意见。 你可以使用不同的类型系统，偏向于函数声明或箭头函数，可以按字母顺序或你喜欢的顺序对props…","fields":{"slug":"/hi-folks/"},"frontmatter":{"date":"March 19, 2019","title":"编写可伸缩组件","description":"编写一个可伸缩的组件，具有弹性，可拓展"}}},{"node":{"excerpt":"本文摘自 react学习集合 本节是  stack reconciler 程序的实现说明的集合。 本文有一定的技术含量，要对React公共API以及它如何分为核心，渲染器和协调(和解，reconciler)程序有很深的理解。如果你对React…","fields":{"slug":"/implementation-react-notes/"},"frontmatter":{"date":"January 06, 2019","title":"从代码实践潜入react内部","description":"通过实现组件的挂载，卸载，更新来深入理解diff是如何执行的"}}}]}},"pageContext":{}}